[{"/home/abhishhek/openSource/cert-generator/src/index.js":"1","/home/abhishhek/openSource/cert-generator/src/reportWebVitals.js":"2","/home/abhishhek/openSource/cert-generator/src/App.js":"3","/home/abhishhek/openSource/cert-generator/src/components/csv.js":"4","/home/abhishhek/openSource/cert-generator/src/pages/csv/csvUpload.js":"5","/home/abhishhek/openSource/cert-generator/src/components/table.js":"6","/home/abhishhek/openSource/cert-generator/src/pages/certiEditor/index.js":"7","/home/abhishhek/openSource/cert-generator/src/components/image/cecrtificateGeneratorByImage.js":"8"},{"size":500,"mtime":1609079093747,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1609079093747,"results":"11","hashOfConfig":"10"},{"size":192,"mtime":1609317253100,"results":"12","hashOfConfig":"10"},{"size":2166,"mtime":1609176180667,"results":"13","hashOfConfig":"10"},{"size":297,"mtime":1609166617364,"results":"14","hashOfConfig":"10"},{"size":2978,"mtime":1609181613507,"results":"15","hashOfConfig":"10"},{"size":411,"mtime":1609316314000,"results":"16","hashOfConfig":"10"},{"size":2097,"mtime":1609317058029,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"ice3d1",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/abhishhek/openSource/cert-generator/src/index.js",[],["38","39"],"/home/abhishhek/openSource/cert-generator/src/reportWebVitals.js",[],"/home/abhishhek/openSource/cert-generator/src/App.js",[],"/home/abhishhek/openSource/cert-generator/src/components/csv.js",["40","41","42"],"import { Button, Container, makeStyles } from '@material-ui/core'\nimport React, { Component, useState } from 'react'\nimport { CSVReader } from 'react-papaparse'\nimport Table from './table'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  button: {\n    marginTop: '20px',\n    padding: '8px 24px',\n    backgroundColor: 'pink'\n    // '&, .MuiButton-root.Mui-disabled': {\n    //   backgroundColor: '#AC4f00',\n    //   color: '#fff',\n    // },\n  }\n}))\n\nconst CsvReaderComponent = () => {\n  const classes = useStyles()\n\n  const [csvData, setCsvData] = useState(null)\n\n  const handleOnDrop = (data, file) => {\n    console.log('---------------------------')\n    console.log(data)\n    console.log('---------------------------')\n\n    const dataArray = []\n\n    data.map(element => {\n      dataArray.push(element.data)\n    })\n\n    setCsvData(dataArray)\n\n    if (file.type === \"text/csv\"\n      || file.type === \".csv\"\n      || file.type === \"application/vnd.ms-excel\") {\n      console.log(\"file is compatible\")\n    } else {\n      handleOnError(\"File not compatible\", file.name, file, \"File not compatible\")\n    }\n  }\n\n  const handleOnError = (err, file, inputElem, reason) => {\n    console.log(\"error here---------------******\")\n    console.log(\"file: \" + file)\n    console.log(err)\n  }\n\n  const handleOnRemoveFile = (data) => {\n    console.log('---------------------------')\n    console.log(data)\n    setCsvData(null)\n    console.log('---------------------------')\n  }\n\n  const show = (data) => {\n    console.log(typeof(data))\n    data.map(element => {\n      console.log(element)\n    })\n  }\n\n  return (\n    <Container>\n      <CSVReader\n        onDrop={handleOnDrop}\n        onError={handleOnError}\n        addRemoveButton\n        onRemoveFile={handleOnRemoveFile}\n      >\n        <span>Click or drop your csv file here</span>\n      </CSVReader>\n      <Button disabled={csvData === null} className={classes.button} onClick={() => {\n        console.log(\"csvData:::\" + show(csvData))\n      }}>\n        Let's Go\n      </Button>      \n      {\n        csvData === null ? <></> : <Table {...csvData} />\n      }\n      \n    </Container>\n  )\n}\n\nexport default CsvReaderComponent;","/home/abhishhek/openSource/cert-generator/src/pages/csv/csvUpload.js",["43"],"import { makeStyles } from '@material-ui/core';\nimport React from 'react'\nimport CsvReader from '../../components/csv'\n\nconst useStyles = makeStyles((theme) => ({\n  root: { }\n}))\n\nconst CsvUpload = () => {\n  const classes = useStyles()\n\n  return (\n    <CsvReader />\n  )\n}\n\nexport default CsvUpload","/home/abhishhek/openSource/cert-generator/src/components/table.js",["44"],"import React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { TablePagination } from '@material-ui/core';\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  root: {\n    margin: '40px 0px'\n  },\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function CustomizedTables(csvData) {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  \n  return (\n    <Paper>\n      <TableContainer component={Paper} className={classes.root}>\n        <Table className={classes.table} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>{csvData[0][0]}</StyledTableCell>\n              {csvData[0].map((ele, index) => (\n                (index !== 0) ?\n                  <StyledTableCell align=\"right\">{ele}</StyledTableCell> : <></>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {\n              Object.keys(csvData).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage + 1).map((key, index) => {\n                if (index !== 0 || page !== 0) { // 0th index is usually data header\n                  return <StyledTableRow key={csvData[key][0]}>\n                    <StyledTableCell component=\"th\" scope=\"row\">\n                      {csvData[key][0]}\n                    </StyledTableCell>\n\n                    {csvData[key].map((ele, index) => (\n                      (index !== 0) ?\n                        <StyledTableCell align=\"right\">{ele}</StyledTableCell> : <></>\n                    ))}\n                  </StyledTableRow>\n                }\n              })\n            }\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={Object.keys(csvData).length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n","/home/abhishhek/openSource/cert-generator/src/pages/certiEditor/index.js",[],"/home/abhishhek/openSource/cert-generator/src/components/image/cecrtificateGeneratorByImage.js",["45","46"],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":2,"column":17,"nodeType":"53","messageId":"54","endLine":2,"endColumn":26},{"ruleId":"55","severity":1,"message":"56","line":31,"column":22,"nodeType":"57","messageId":"58","endLine":31,"endColumn":24},{"ruleId":"55","severity":1,"message":"56","line":61,"column":22,"nodeType":"57","messageId":"58","endLine":61,"endColumn":24},{"ruleId":"51","severity":1,"message":"59","line":10,"column":9,"nodeType":"53","messageId":"54","endLine":10,"endColumn":16},{"ruleId":"55","severity":1,"message":"60","line":68,"column":117,"nodeType":"57","messageId":"61","endLine":68,"endColumn":119},{"ruleId":"62","severity":1,"message":"63","line":20,"column":11,"nodeType":"64","endLine":20,"endColumn":37},{"ruleId":"62","severity":1,"message":"65","line":25,"column":6,"nodeType":"66","endLine":25,"endColumn":8,"suggestions":"67"},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'classes' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","react-hooks/exhaustive-deps","Assignments to the 'ctx' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has a missing dependency: 'updateCanvas'. Either include it or remove the dependency array.","ArrayExpression",["70"],"no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},"Update the dependencies array to be: [updateCanvas]",{"range":"73","text":"74"},[706,708],"[updateCanvas]"]