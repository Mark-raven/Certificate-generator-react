[{"/home/abhishhek/openSource/cert-generator/src/index.js":"1","/home/abhishhek/openSource/cert-generator/src/reportWebVitals.js":"2","/home/abhishhek/openSource/cert-generator/src/App.js":"3","/home/abhishhek/openSource/cert-generator/src/components/csv.js":"4","/home/abhishhek/openSource/cert-generator/src/pages/csv/csvUpload.js":"5","/home/abhishhek/openSource/cert-generator/src/components/table.js":"6","/home/abhishhek/openSource/cert-generator/src/pages/certiEditor/index.js":"7","/home/abhishhek/openSource/cert-generator/src/components/image/cecrtificateGeneratorByImage.js":"8","/home/abhishhek/openSource/cert-generator/src/Routes.js":"9","/home/abhishhek/openSource/cert-generator/src/pages/ImageCanvas/index.js":"10","/home/abhishhek/openSource/cert-generator/src/pages/404/index.js":"11","/home/abhishhek/openSource/cert-generator/src/components/pdf/certificateGenertorWithPdf.js":"12","/home/abhishhek/openSource/cert-generator/src/theme/index.js":"13","/home/abhishhek/openSource/cert-generator/src/theme/typography.js":"14","/home/abhishhek/openSource/cert-generator/src/theme/shadow.js":"15"},{"size":493,"mtime":1609317599588,"results":"16","hashOfConfig":"17"},{"size":356,"mtime":1609317599616,"results":"18","hashOfConfig":"17"},{"size":258,"mtime":1609344203021,"results":"19","hashOfConfig":"17"},{"size":2111,"mtime":1609341045446,"results":"20","hashOfConfig":"17"},{"size":286,"mtime":1609341232723,"results":"21","hashOfConfig":"17"},{"size":3157,"mtime":1609341102707,"results":"22","hashOfConfig":"17"},{"size":411,"mtime":1609316314000,"results":"23","hashOfConfig":"17"},{"size":2098,"mtime":1609317599504,"results":"24","hashOfConfig":"17"},{"size":633,"mtime":1609342129138,"results":"25","hashOfConfig":"17"},{"size":207,"mtime":1609319869318,"results":"26","hashOfConfig":"17"},{"size":588,"mtime":1609345266072,"results":"27","hashOfConfig":"17"},{"size":1867,"mtime":1609341270259,"results":"28","hashOfConfig":"17"},{"size":1518,"mtime":1609344919081,"results":"29","hashOfConfig":"17"},{"size":793,"mtime":1609344331903,"results":"30","hashOfConfig":"17"},{"size":3260,"mtime":1609342953591,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"ice3d1",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/abhishhek/openSource/cert-generator/src/index.js",[],["67","68"],"/home/abhishhek/openSource/cert-generator/src/reportWebVitals.js",[],"/home/abhishhek/openSource/cert-generator/src/App.js",["69"],"/home/abhishhek/openSource/cert-generator/src/components/csv.js",["70"],"import { Button, Container, makeStyles } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport { CSVReader } from 'react-papaparse'\nimport Table from './table'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  button: {\n    marginTop: '20px',\n    padding: '8px 24px',\n    backgroundColor: 'pink'\n  }\n}))\n\nconst CsvReaderComponent = () => {\n  const classes = useStyles()\n\n  const [csvData, setCsvData] = useState(null)\n\n  const handleOnDrop = (data, file) => {\n    console.log('---------------------------')\n    console.log(data)\n    console.log('---------------------------')\n\n    const dataArray = []\n\n    data.map((element) => {\n      return dataArray.push(element.data)\n    })\n\n    setCsvData(dataArray)\n\n    if (\n      !(\n        file.type === 'text/csv' ||\n        file.type === '.csv' ||\n        file.type === 'application/vnd.ms-excel'\n      )\n    ) {\n      handleOnError(\n        'File not compatible',\n        file.name,\n        file,\n        'File not compatible, provide only csv parsable files'\n      )\n    }\n  }\n\n  const handleOnError = (err, file, inputElem, reason) => {\n    console.log('error here---------------******')\n    console.log('file: ' + file)\n    console.log(err)\n  }\n\n  const handleOnRemoveFile = (data) => {\n    console.log('---------------------------')\n    console.log(data)\n    setCsvData(null)\n    console.log('---------------------------')\n  }\n\n  const show = (data) => {\n    console.log(typeof data)\n    data.map((element) => {\n      console.log(element)\n    })\n  }\n\n  return (\n    <Container>\n      <CSVReader\n        onDrop={handleOnDrop}\n        onError={handleOnError}\n        addRemoveButton\n        onRemoveFile={handleOnRemoveFile}\n      >\n        <span>Click or drop your csv file here</span>\n      </CSVReader>\n      <Button\n        disabled={csvData === null}\n        className={classes.button}\n        onClick={() => {\n          console.log('csvData:::' + show(csvData))\n        }}\n      >\n        Let's Go\n      </Button>\n      {csvData === null ? <></> : <Table {...csvData} />}\n    </Container>\n  )\n}\n\nexport default CsvReaderComponent\n","/home/abhishhek/openSource/cert-generator/src/pages/csv/csvUpload.js",["71"],"import { makeStyles } from '@material-ui/core'\nimport React from 'react'\nimport CsvReader from '../../components/csv'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {}\n}))\n\nconst CsvUpload = () => {\n  const classes = useStyles()\n\n  return <CsvReader />\n}\n\nexport default CsvUpload\n","/home/abhishhek/openSource/cert-generator/src/components/table.js",["72"],"import React from 'react'\nimport { withStyles, makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport { TablePagination } from '@material-ui/core'\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell)\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow)\n\nconst useStyles = makeStyles({\n  root: {\n    margin: '40px 0px'\n  },\n  table: {\n    minWidth: 700\n  }\n})\n\nexport default function CustomizedTables(csvData) {\n  const classes = useStyles()\n  const [page, setPage] = React.useState(0)\n  const [rowsPerPage, setRowsPerPage] = React.useState(10)\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage)\n  }\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value)\n    setPage(0)\n  }\n\n  return (\n    <Paper>\n      <TableContainer component={Paper} className={classes.root}>\n        <Table className={classes.table} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>{csvData[0][0]}</StyledTableCell>\n              {csvData[0].map((ele, index) =>\n                index !== 0 ? (\n                  <StyledTableCell align=\"right\">{ele}</StyledTableCell>\n                ) : (\n                  <></>\n                )\n              )}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {Object.keys(csvData)\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage + 1)\n              .map((key, index) => {\n                if (index !== 0 || page !== 0) {\n                  // 0th index is usually data header\n                  return (\n                    <StyledTableRow key={csvData[key][0]}>\n                      <StyledTableCell component=\"th\" scope=\"row\">\n                        {csvData[key][0]}\n                      </StyledTableCell>\n\n                      {csvData[key].map((ele, index) =>\n                        index !== 0 ? (\n                          <StyledTableCell align=\"right\">{ele}</StyledTableCell>\n                        ) : (\n                          <></>\n                        )\n                      )}\n                    </StyledTableRow>\n                  )\n                }\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25, 100]}\n        component=\"div\"\n        count={Object.keys(csvData).length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  )\n}\n","/home/abhishhek/openSource/cert-generator/src/pages/certiEditor/index.js",[],"/home/abhishhek/openSource/cert-generator/src/components/image/cecrtificateGeneratorByImage.js",["73","74"],"import { Button } from '@material-ui/core'\nimport React, { useRef, useEffect } from 'react'\nimport jsPDF from 'jspdf'\n\nfunction CertificateGeneratorByImage() {\n  const canvas = useRef()\n  let ctx = null\n\n  useEffect(() => {\n    // dynamically assign the width and height to canvas\n    const canvasEle = canvas.current\n    var imageObj1 = new Image()\n    imageObj1.src = 't1.png'\n    imageObj1.onload = function () {\n      canvasEle.width = imageObj1.width\n      canvasEle.height = imageObj1.height\n      console.log(imageObj1.height + '--------' + imageObj1.width)\n    }\n    // get context of the canvas\n    ctx = canvasEle.getContext('2d')\n  }, [])\n\n  useEffect(() => {\n    updateCanvas()\n  }, [])\n\n  function downloadImage(uri, name) {\n    var link = document.createElement('a')\n    link.download = name\n    link.href = uri\n    document.body.appendChild(link)\n    link.click()\n    document.body.removeChild(link)\n  }\n\n  function downloadPdf(uri, name) {\n    const pdf = new jsPDF({ orientation: 'landscape' })\n    const imgProps = pdf.getImageProperties(uri)\n    const pdfWidth = pdf.internal.pageSize.getWidth()\n    const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width\n    console.log(pdfHeight + '*********' + pdfWidth)\n    pdf.addImage(uri, 'JPEG', 0, 0, pdfWidth, pdfHeight)\n    pdf.save(`${name}.pdf`)\n  }\n\n  function updateCanvas() {\n    var imageObj1 = new Image()\n    imageObj1.src = 't1.png'\n    imageObj1.onload = function () {\n      ctx.drawImage(imageObj1, 0, 0)\n      ctx.font = '30pt Ubuntu'\n      ctx.fillStyle = 'white'\n      ctx.fillText('Abhishek Kumar', 285, 200)\n    }\n  }\n\n  return (\n    <div>\n      <Button\n        onClick={() => {\n          const c = document.getElementById('canvasa')\n          console.log(c.toDataURL('png'))\n          downloadPdf(c.toDataURL('png'), 'certificate-pdf')\n          downloadImage(c.toDataURL('png'), 'certificate-image')\n          // window.open(c.toDataURL('png'))\n        }}\n      >\n        Download\n      </Button>\n      <canvas ref={canvas} id=\"canvasa\"></canvas>\n    </div>\n  )\n}\n\nexport default CertificateGeneratorByImage\n","/home/abhishhek/openSource/cert-generator/src/Routes.js",[],"/home/abhishhek/openSource/cert-generator/src/pages/ImageCanvas/index.js",[],"/home/abhishhek/openSource/cert-generator/src/pages/404/index.js",[],"/home/abhishhek/openSource/cert-generator/src/components/pdf/certificateGenertorWithPdf.js",["75","76"],"/home/abhishhek/openSource/cert-generator/src/theme/index.js",[],"/home/abhishhek/openSource/cert-generator/src/theme/typography.js",["77"],"/home/abhishhek/openSource/cert-generator/src/theme/shadow.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":2,"column":25,"nodeType":"84","messageId":"85","endLine":2,"endColumn":39},{"ruleId":"86","severity":1,"message":"87","line":64,"column":24,"nodeType":"88","messageId":"89","endLine":64,"endColumn":26},{"ruleId":"82","severity":1,"message":"90","line":10,"column":9,"nodeType":"84","messageId":"85","endLine":10,"endColumn":16},{"ruleId":"86","severity":1,"message":"91","line":72,"column":33,"nodeType":"88","messageId":"92","endLine":72,"endColumn":35},{"ruleId":"93","severity":1,"message":"94","line":20,"column":11,"nodeType":"95","endLine":20,"endColumn":37},{"ruleId":"93","severity":1,"message":"96","line":25,"column":6,"nodeType":"97","endLine":25,"endColumn":8,"suggestions":"98"},{"ruleId":"82","severity":1,"message":"90","line":13,"column":9,"nodeType":"84","messageId":"85","endLine":13,"endColumn":16},{"ruleId":"82","severity":1,"message":"99","line":33,"column":7,"nodeType":"84","messageId":"85","endLine":33,"endColumn":17},{"ruleId":"100","severity":1,"message":"101","line":1,"column":1,"nodeType":"102","endLine":50,"endColumn":3},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'createMuiTheme' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'classes' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","react-hooks/exhaustive-deps","Assignments to the 'ctx' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has a missing dependency: 'updateCanvas'. Either include it or remove the dependency array.","ArrayExpression",["105"],"'capitalize' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},"Update the dependencies array to be: [updateCanvas]",{"range":"108","text":"109"},[695,697],"[updateCanvas]"]